name: build with coverage

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      JVM_PROJECTS: JanssenProject/jans-auth-server|JanssenProject/jans-orm|JanssenProject/jans-config-api|JanssenProject/jans-client-api|JanssenProject/jans-scim|JanssenProject/jans-core|JanssenProject/jans-notify|JanssenProject/jans-fido2|JanssenProject/jans-eleven
      NON_JVM_PROJECTS: JanssenProject/jans-setup|JanssenProject/jans-cli|JanssenProject/docker-jans-persistence-loader|ossdhaval/docker-jans-client-api|JanssenProject/jans-pycloudlib|JanssenProject/docker-jans-auth-server|JanssenProject/docker-jans-fido2|JanssenProject/docker-jans-scim|JanssenProject/docker-jans-config-api|JanssenProject/docker-jans-certmanager|JanssenProject/docker-jans-configuration-manager|JanssenProject/jans-cloud-native
    
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of sonarqube analysis
      
      - shell: bash
        env:
          ORGANIZATION: ${{ github.repository_owner }}
          PROJECT_KEY: ${{ github.repository.name }}
        run: |
          echo "---->"
          
          echo $ORGANIZATION
          echo $PROJECT_KEY
          echo Hello World! > hello-world.txt
          echo good to be here >> hello-world.txt
          
      - shell: bash
        run: |
          echo "----<"
          value=`cat hello-world.txt`
          echo $value
      
      - name: Print env variables
        run: |
          echo "----<"
          value=`cat hello-world.txt`
          echo $value
          echo ${ENV}

#       - name: Print github context
#         shell: bash
#         env:
#          GITHUB_CONTEXT: ${{ toJson(github) }}
#         run:   echo "$GITHUB_CONTEXT"

#       - name: Set up JDK 11
#         if: contains(env.JVM_PROJECTS, github.repository)
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'adopt'
          
#       - name: Build with Maven
#         if: contains(env.JVM_PROJECTS, github.repository)
#         run: |
#           case "$GITHUB_REPOSITORY" in
#             "JanssenProject/jans-auth-server") 
#               echo "Run maven build for jans-auth-server "
#               mvn clean -fae -X -pl \!client,\!static,\!server,\!rp-spring-boot jacoco:prepare-agent test install jacoco:report
#             ;;
#             "JanssenProject/jans-client-api") 
#               echo "Run maven build fro jans-client-api"
#               mvn clean -fae -pl \!server jacoco:prepare-agent test install jacoco:report
#             ;;
#             "JanssenProject/jans-scim") 
#               echo "Run maven build fro jans-scim"
#               mvn clean -fae -pl \!client jacoco:prepare-agent test install jacoco:report
#             ;;
#             *) 
#             echo "Run maven build for Java repository"
#             mvn clean -fae jacoco:prepare-agent test install jacoco:report
#             ;;
#           esac

#       - name: Cache SonarCloud packages
#         if: contains(env.JVM_PROJECTS, github.repository)
#         uses: actions/cache@v1
#         with:
#           path: ~/.sonar/cache
#           key: ${{ runner.os }}-sonar
#           restore-keys: ${{ runner.os }}-sonar
          
#       - name: Cache Maven packages
#         if: contains(env.JVM_PROJECTS, github.repository)
#         uses: actions/cache@v1
#         with:
#           path: ~/.m2
#           key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#           restore-keys: ${{ runner.os }}-m2
          
#       - name: Build and analyze
#         if: contains(env.JVM_PROJECTS, github.repository)
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         run: |
#           case "$GITHUB_REPOSITORY" in
#             "ossdhaval/jans-auth-server") 
#               echo "Run Sonar analysis for jans-auth-server "
#               mvn -B -pl \!client,\!static,\!server,\!rp-spring-boot verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
#             ;;
#             "JanssenProject/jans-client-api") 
#               echo "Run Sonar analysis for jans-client-api"
#               mvn -B -pl \!server verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
#             ;;
#             "JanssenProject/jans-scim") 
#               echo "Run Sonar analysis for jans-scim"
#               mvn -B -pl \!client verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
#             ;;
#             *) 
#             echo "Run maven build for Java repository"
#             mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
#             ;;
#           esac
      
#       - name: SonarCloud Scan
#         if: contains(env.NON_JVM_PROJECTS, github.repository)
#         uses: SonarSource/sonarcloud-github-action@master
# #         with:
# #           args: >
# #             -Dsonar.organization=${{ github.repository_owner }}
# #             -Dsonar.projectKey=${{ github.repository.name }}
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
